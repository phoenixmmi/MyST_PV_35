https://github.com/okovtun/ST_PV_35

/////////////////////////////////////////////////////////
////////////	Standard Template Library    ////////////
/////////////////////////////////////////////////////////

TODO:
http://cplusplus.com/reference/map/map/
http://cplusplus.com/reference/set/set/
http://cplusplus.com/reference/list/
Последнее задание в *.pdf-файле (про ГАИ :-))

DONE:
http://cplusplus.com/reference/stl/
http://cplusplus.com/reference/vector/vector/
http://cplusplus.com/reference/deque/deque/

/////////////////////////////////////////////////////////
///////////////		Data containers   ///////////////
/////////////////////////////////////////////////////////

//			Binary Tree

DONE:
1. ILconstructor;
2. CopyConstructor/CopyAssignment;


DONE:
1. Добавить метод size, который возвращает количество узлов в дереве;
2. Написать метод sum, который возвращает сумму всех значений в дереве;
3. Написать метод avg, который возвращает среднее арифметическое всех элементов дерева;
4. Метод erase - удаляет указанное значение из дерева.
Для каждого метода рализовать обвертку.

//			List:
DONE:
1. Проверить оператор + c с типами данных double и std::string;
2. Создать ветку separate_templated и в ней разделить шаблонный List на файлы;

DONE:
Проверчный код в main.cpp проекта List должен заработать.

TODO:
1. Оптимизировать алгоритм вставки элемента в методе insert; DONE
2. erase;	DONE
3. initializer_list constructor;DONE
4. opertor+;	DONE
5. CopyMethods;	DONE
6. MoveMethods; DONE
7. size_constructor;


DONE:
В класс List добавить методы:
push_back;
pop_front;
pop_back;
insert;

Каждый из методов проверить при помощи print и print_reverse;


DONE:
Дописать класс Iterator.

//			ForwardList
DONE:
1. erase - удаляет элемент с указанной позиции;				DONE
2. Написать конструктор, который создает список заданного размера;	DONE
3. Перегрузить оператор [];				DONE
4. CopyConstructor;		DONE
5. CopyAssignment;		DONE
6. Перегрузить оператор +, который сливает два списка в один, т.е., выполняет конкатенацию списков;
4. MoveConstructor;
5. MoveAssignment

DONE:
1. pop_front - удаляет элемент с начала списка;
2. pop_back  - удаляет элемент с конца списка;
3. insert - вставляет элемент по индексу;





/////////////////////////////////////////////////////////
///////		Inheritance and Polymorphism:	/////////
/////////////////////////////////////////////////////////

TODO:
Все классы в проекте Academy вынести в отдельные файлы.

DONE:
1. Написать регулярное выражение для проверки E-Mail;
2. Написать регулярное выражение для проверки номера телефона в следующем формате: +38(095)123-45-67;
3. Если номер телефона введен так +380951234567, преобразовать его в такой формат: +38(095)123-45-67;
Про регулярки можно почитать здесь: 
http://www.cplusplus.com/reference/regex/
и здесь:http://www.cplusplus.com/reference/regex/ECMAScript/
Следующая тема "Абстрактный базовый класс"

DONE:
Написать регулярное выражение для проверки названия группы.

DONE:
1. Создать массив group, и добавить в группу преподавателей и студентов;
2. Вывести подробную информацию обо всех участниках группы;
3. ***Написать фильтрацию данных во всех классах;

DONE:
1. Дбавить класс Graduate (Дипломник);


DONE:
1. В классе String написать MoveAssignment;
2. Для класса String перегрузить оператор >>;
3. Для класса String перегрузить операторы сравнения.

----------------------------------------------------------------------

DONE:

1. Для класса String перегрузить оператор >> и оператор +, выполняющий конкатенацию строк. Оба оператора должны быть написаны с соблюдением инкапсуляции;
2. Добавить в класс MoveConstructor и MoveAssignment, что это такое можно почитать здесь: http://www.cplusplus.com/doc/tutorial/classes2/;